#!/bin/sh

#
#	A simple generator for a .cpp and .hpp file given a class name
#

if [ -z $1 ]
then
	exit 1;
fi

#
#	Capitalize header guard name
#

HEADERGUARD=$(echo "$1_HPP" | tr '[:lower:]' '[:upper:]')

touch "$1".cpp "$1".hpp

cat << EOF > "$1".hpp
#ifndef $HEADERGUARD
# define $HEADERGUARD

class			$1
{
	public:
		$1(void);
		$1(const $1 &other);
		~$1(void);
		$1		&operator=(const $1 &other);

	private:
		tmp;
};

#endif
EOF

cat << EOF > "$1".cpp
#include "$1.hpp"
#include <iostream>

/*
**	Constructors
*/

$1::$1(void)
{
	std::cout << "$1: Default constructor called" << std::endl;
}

$1::$1(const $1 &other)
{
	std::cout << "$1: Copy constructor called" << std::endl;
	*this = other;
}

/*
**	Destructor
*/

$1::~$1(void)
{
	std::cout << "$1: Destructor called" << std::endl;
}

/*
**	Operator Overloaders
*/

$1		&$1::operator=(const $1 &other)
{
	std::cout << "$1: = operator overloader called" << std::endl;
	return (*this);
}

/*
**	Other Member Functions
*/
EOF

vim "$1".{c,h}pp -c "bufdo Stdheader" -c ":wqa"
